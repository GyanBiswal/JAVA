/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // ListNode temp1 = list1, temp2 = list2;
        // ListNode dummy = new ListNode();
        // ListNode ans = dummy;

        // while(temp1 != null && temp2 != null){
        //     if(temp1.val < temp2.val){
        //         dummy.next = temp1;
        //         dummy = dummy.next;
        //         temp1 = temp1.next;
        //     }
        //     else{
        //         dummy.next = temp2;
        //         dummy = dummy.next;
        //         temp2 = temp2.next;
        //     }
        // }
        // if(temp1 == null){
        //     dummy.next = temp2;
        // }
        // else{
        //     dummy.next = temp1;
        // }
        // return ans.next;

        if(list1 == null){
            return list2;
        }
        if(list2 == null){
            return list1;
        }
        if(list1.val < list2.val){
            list1.next = mergeTwoLists(list1.next , list2);
            return list1;
        }
        else{
            list2.next = mergeTwoLists(list1 , list2.next);
            return list2;
        }
    }
}
