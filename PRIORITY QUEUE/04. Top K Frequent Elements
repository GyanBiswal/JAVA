class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> freq = new HashMap<>(); // number, frequency
        for(int num : nums) freq.put(num, freq.getOrDefault(num, 0) + 1);

        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> Integer.compare(a[1],b[1]));

        for(Map.Entry<Integer, Integer> entry : freq.entrySet()){
            pq.offer(new int[] {entry.getKey(), entry.getValue()});
            while(pq.size() > k) pq.poll();
        }

        int[] ans = new int[k];
        int j = 0;
        while(!pq.isEmpty()){
            ans[j++] = pq.poll()[0];
        }
        return ans;
    }
}
