class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int row = mat.length;
        int col = mat[0].length;
        int[][] ans = new int[row][col];
        for(int[] arr : ans) Arrays.fill(arr, -1);
        int[][] dirs = {{-1,0},{1,0},{0,1},{0,-1}};
        Queue<int[]> q = new LinkedList<>();

        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(mat[i][j] == 0){
                    ans[i][j] = 0;
                    q.offer(new int[]{i,j});
                }
            }
        }
        while(!q.isEmpty()){
            int[] curr = q.poll();
            int x = curr[0], y = curr[1];

            for(int[] dir : dirs){
                int newX = x + dir[0];
                int newY = y + dir[1];

                while(newX >= 0 && newX < row && newY >= 0 && newY < col && ans[newX][newY] == -1){
                    ans[newX][newY] = ans[x][y] + 1;
                    q.offer(new int[]{newX, newY});
                }
            }
        }
        return ans;
    }
}
