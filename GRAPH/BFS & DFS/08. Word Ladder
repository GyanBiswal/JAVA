class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        Set<String> wordSet = new HashSet<>(wordList);
        if (!wordSet.contains(endWord)) return 0;

        Queue<String> queue = new LinkedList<>();
        queue.offer(beginWord);

        int steps = 1;

        while (!queue.isEmpty()) {
            int size = queue.size();

            for (int i = 0; i < size; i++) {
                String currWord = queue.poll();

                // Try changing every letter
                for (int j = 0; j < currWord.length(); j++) {
                    char[] chars = currWord.toCharArray();
                    for (char ch = 'a'; ch <= 'z'; ch++) {
                        chars[j] = ch;
                        String newWord = new String(chars);

                        if (newWord.equals(endWord)) return steps + 1;
                        // In Java, == compares object references, not string contents.
                        // To compare strings for equality by value, you must use .equals().
                        if (wordSet.contains(newWord)) {
                            queue.offer(newWord);
                            wordSet.remove(newWord); // mark as visited
                        }
                    }
                }
            }

            steps++;
        }
        return 0; // not found
    }
}
